//Works online on linux systems, needs the stty file/thingy
///scoredoesn't work yet, stays 0. Haven't randomized itemSpot mvmnt

#include<stdio.h>
#include<stdlib.h>
#include<time.h>

int printBoard(int spot[], int itemSpot[], int score, int bWidth, int bHeight);

int main(void){
  srand(time(0));
  int c;
  int bWidth = 35;
  int bHeight = 25;
  int spot[2] = {1,1};
  int itemSpot[] = {bHeight/2, bWidth/2};
  int score = 0;
  /* use system call to make terminal send all keystrokes directly to stdin */
  printBoard(spot,itemSpot,score,bWidth,bHeight);
  while(1)
  {
    system ("/bin/stty raw");
    c=getchar();
      /* type a period to break out of the loop, since CTRL-D won't work raw */
     do
     { 
      if(c == 'w')
      {
        spot[0]--;
      }
      else if (c == 's')
      {
        spot[0]++;
      }
      else if( c == 'd')
      {
        spot[1]++;
      }
      else if( c == 'a')
      {
        spot[1]--;
      }
    }while(c!= '.' && c!= 'w' && c!= 's' && c != 'd' && c!= 'a');

    /* use system call to set terminal behaviour to more normal behaviour */
    system ("/bin/stty cooked");
    printf("\n");
    printf("SCORE: %d\n", score*100);
    printBoard(spot,itemSpot,score,bWidth,bHeight);
  }

  return 0;
}


int printBoard(int spot[], int itemSpot[], int score, int bWidth, int bHeight)
{

  if(spot[0] <= 0)
  {
    spot[0] = bHeight-1;
  }
  if (spot[0] == bHeight)
  {
    spot[0] = 1;
  }
  if(spot[1] <= 0)
  {
    spot[1] = bWidth-1;
  }
  if (spot[1] == bWidth)
  {
    spot[1] = 1;
  }
  for (int i = 0; i <= bHeight; i++)
  {
    if(i == 0 || i == bHeight)
    {
      for(int j = 0; j <= bWidth; j++)
      {
        printf("-");
      }
    }
    else
    {
      for(int j = 0; j<=bWidth; j++)
      {
        if(j == 0 || j  == bWidth)
        {
          printf("|");
        }
        else
        {
          if(spot[0]==itemSpot[0] && spot[1] == itemSpot[1])
          {
            score++;
            itemSpot[0]+=10;
            itemSpot[1]+=10;
            if(itemSpot[0] >= bHeight)
            {
              itemSpot[0]-=bHeight;
            }
            if(itemSpot[1] >= bWidth)
            {
              itemSpot[1]-=bWidth;
            }
          }
          if(i == spot[0] && j == spot[1])
          {
            printf("*");
            continue;
          }
          if(i == itemSpot[0] && j == itemSpot[1])
          {
            printf("O");
          }
          else
          {
            printf(" ");
          }
        }
      }
    }
    printf("\n");
  }
  return score;
  // loop below just makes asterisk keep moving left to right, top to bottom
  /*spot[1]++;
  if(spot[1] == bWidth)
  {
    spot[1] = 1;
    spot[0]++;
  }
  if(spot[0] == bHeight)
  {
    spot[0] = 1;
  }
  printf("%d & %d\n", spot[0], spot[1]);*/
}
